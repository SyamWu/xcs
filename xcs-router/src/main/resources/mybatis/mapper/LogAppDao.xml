<?xml version="1.0" encoding="UTF-8" ?>
     <!DOCTYPE mapper 
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="syamwu.logtranslate.dao.LogAppDao">

   <resultMap id="logAppResultMap" type="syamwu.logtranslate.entity.LogApp">
       <result column="ID" property="id" jdbcType="VARCHAR" />
       <result column="NODE_ID" property="nodeId" jdbcType="VARCHAR" />
       <result column="APP_CODE" property="appCode" jdbcType="VARCHAR" />
       <result column="APP_NAME" property="appName" jdbcType="VARCHAR" />
       <result column="APP_SEARCH_CODE" property="appSearchCode" jdbcType="VARCHAR" />
       <result column="CREATED_TIME" property="createdTime" jdbcType="TIMESTAMP" />
       <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
   </resultMap>
   
  <resultMap id="logNodeAppResultMap" type="syamwu.logtranslate.entity.LogNodeApp">
       <result column="ID" property="id" jdbcType="VARCHAR" />
       <result column="NODE_ID" property="nodeId" jdbcType="VARCHAR" />
       <result column="APP_CODE" property="appCode" jdbcType="VARCHAR" />
       <result column="APP_NAME" property="appName" jdbcType="VARCHAR" />
       <result column="APP_SEARCH_CODE" property="appSearchCode" jdbcType="VARCHAR" />
       <result column="HOST" property="host" jdbcType="VARCHAR" />
       <result column="PORT" property="port" jdbcType="VARCHAR" />
       <result column="SEARCH_URL" property="searchUrl" jdbcType="VARCHAR" />
       <result column="CREATED_TIME" property="createdTime" jdbcType="TIMESTAMP" />
       <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
   </resultMap>

   <select id="select" resultMap="logAppResultMap">
      select
      <choose>
          <when test="_parameter!=null and _parameter.containsKey('selects') and selects != null">
               <foreach collection="selects" item="item" index="index" separator="," >${item}</foreach>
          </when>
          <otherwise>
                *    
          </otherwise>
      </choose>
      from es_log_app
       <if test="_parameter!=null and _parameter.containsKey('wheres') and wheres != null">
           <where>
          <if test="wheres.id != null ">  and ID = #{wheres.id,jdbcType=VARCHAR}</if>
          <if test="wheres.nodeId != null ">  and NODE_ID = #{wheres.nodeId,jdbcType=VARCHAR}</if>
          <if test="wheres.appCode != null ">  and APP_CODE = #{wheres.appCode,jdbcType=VARCHAR}</if>
          <if test="wheres.appName != null  ">  and APP_NAME like CONCAT('%',#{wheres.appName,jdbcType=VARCHAR},'%') </if>
          <if test="wheres.appSearchCode != null ">  and APP_SEARCH_CODE = #{wheres.appSearchCode,jdbcType=VARCHAR}</if>
          <if test="wheres.beginCreatedTime != null ">  and CREATED_TIME &gt;= #{wheres.beginCreatedTime,jdbcType=TIMESTAMP}</if>
          <if test="wheres.endCreatedTime != null "> and CREATED_TIME &lt;= #{wheres.endCreatedTime,jdbcType=TIMESTAMP}</if>
          <if test="wheres.beginUpdateTime != null ">  and UPDATE_TIME &gt;= #{wheres.beginUpdateTime,jdbcType=TIMESTAMP}</if>
          <if test="wheres.endUpdateTime != null "> and UPDATE_TIME &lt;= #{wheres.endUpdateTime,jdbcType=TIMESTAMP}</if>
          </where>
      </if>
     <if test="_parameter!=null and _parameter.containsKey('orderColumns') and _parameter.containsKey('isAsc') and orderColumns != null and isAsc != null ">
            order by   <foreach collection="orderColumns" item="item" index="index"  open="(" separator="," close=")">${item}</foreach>  
           <choose>
               <when test="isAsc == true">
                     asc 
               </when>
               <otherwise>
                     desc
               </otherwise>
           </choose>
     </if>
      <if test="_parameter!=null and _parameter.containsKey('pageInfo') and pageInfo!=null and pageInfo.pageNum != null  and pageInfo.pageSize != null  ">
               limit #{pageInfo.pageSize,jdbcType=INTEGER} offset ${(pageInfo.pageNum - 1) * pageInfo.pageSize}
      </if>
     </select>


   <select id="selectById" parameterType="java.lang.String" resultMap="logAppResultMap">
         select * from es_log_app where id = #{id,jdbcType=VARCHAR}
   </select>

    <select id="selectByIds" parameterType="java.util.List" resultMap="logAppResultMap">
         select    *    from es_log_app
         where id in  
         <foreach collection="list" item = "id" open="(" separator="," close=")">
            #{id}
         </foreach>
   </select>

   <select id="selectCount" resultType="Long">
         select count(*) from es_log_app
       <if test="_parameter!=null and _parameter.containsKey('wheres') and wheres != null">
           <where>
          <if test="wheres.id != null ">  and ID = #{wheres.id,jdbcType=VARCHAR}</if>
          <if test="wheres.nodeId != null ">  and NODE_ID = #{wheres.nodeId,jdbcType=VARCHAR}</if>
          <if test="wheres.appCode != null ">  and APP_CODE = #{wheres.appCode,jdbcType=VARCHAR}</if>
          <if test="wheres.appName != null ">  and APP_NAME like CONCAT('%',#{wheres.appName,jdbcType=VARCHAR},'%') </if>
          <if test="wheres.appSearchCode != null ">  and APP_SEARCH_CODE = #{wheres.appSearchCode,jdbcType=VARCHAR}</if>
          <if test="wheres.beginCreatedTime != null ">  and CREATED_TIME &gt;= #{wheres.beginCreatedTime,jdbcType=TIMESTAMP}</if>
          <if test="wheres.endCreatedTime != null "> and CREATED_TIME &lt;= #{wheres.endCreatedTime,jdbcType=TIMESTAMP}</if>
          <if test="wheres.beginUpdateTime != null ">  and UPDATE_TIME &gt;= #{wheres.beginUpdateTime,jdbcType=TIMESTAMP}</if>
          <if test="wheres.endUpdateTime != null "> and UPDATE_TIME &lt;= #{wheres.endUpdateTime,jdbcType=TIMESTAMP}</if>
          </where>
      </if>
     </select>

   <insert id="insert" parameterType="syamwu.logtranslate.entity.LogApp">
        insert into es_log_app
           <trim prefix="(" suffix=")" suffixOverrides="," >
             <if test="id != null" >
               ID,
             </if>
             <if test="nodeId != null" >
               NODE_ID,
             </if>
             <if test="appCode != null" >
               APP_CODE,
             </if>
             <if test="appName != null" >
               APP_NAME,
             </if>
             <if test="appSearchCode != null" >
               APP_SEARCH_CODE,
             </if>
             <if test="createdTime != null" >
               CREATED_TIME,
             </if>
             <if test="updateTime != null" >
               UPDATE_TIME,
             </if>
           </trim>
            <trim prefix="values (" suffix=")" suffixOverrides="," >
             <if test="id != null" >
               #{id,jdbcType=VARCHAR},
             </if>
             <if test="nodeId != null" >
               #{nodeId,jdbcType=VARCHAR},
             </if>
             <if test="appCode != null" >
               #{appCode,jdbcType=VARCHAR},
             </if>
             <if test="appName != null" >
               #{appName,jdbcType=VARCHAR},
             </if>
             <if test="appSearchCode != null" >
               #{appSearchCode,jdbcType=VARCHAR},
             </if>
             <if test="createdTime != null" >
               #{createdTime,jdbcType=TIMESTAMP},
             </if>
             <if test="updateTime != null" >
               #{updateTime,jdbcType=TIMESTAMP},
             </if>
           </trim>
   </insert>

   <update id="update" parameterType="syamwu.logtranslate.entity.LogApp">
        update es_log_app
        <set>
           <if test="nodeId != null ">NODE_ID = #{nodeId,jdbcType=VARCHAR},</if>
           <if test="appCode != null ">APP_CODE = #{appCode,jdbcType=VARCHAR},</if>
           <if test="appName != null ">APP_NAME = #{appName,jdbcType=VARCHAR},</if>
           <if test="appSearchCode != null ">APP_SEARCH_CODE = #{appSearchCode,jdbcType=VARCHAR},</if>
           <if test="createdTime != null ">CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},</if>
           <if test="updateTime != null ">UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},</if>
        </set>
          where id = #{id,jdbcType=VARCHAR}
   </update>

   <delete id="delete" parameterType="syamwu.logtranslate.entity.LogApp">
     delete from es_log_app
          where id = #{id,jdbcType=VARCHAR}
   </delete>

   <delete id="deleteByIds" parameterType="java.util.List">
      delete from es_log_app
          where id in 
          <foreach collection="list" item = "id" open="(" separator="," close=")">
                #{id}
          </foreach>
   </delete>

   <insert id="batchInsert" parameterType="java.util.List">
        insert into es_log_app
           <trim prefix="(" suffix=")" suffixOverrides="," >
               ID,
               NODE_ID,
               APP_CODE,
               APP_NAME,
               APP_SEARCH_CODE,
               CREATED_TIME,
               UPDATE_TIME,
           </trim>
           VALUES 
           <foreach collection="list" item="item" index="index" separator="," > 
               <trim prefix=" (" suffix=")" suffixOverrides="," >
                #{item.id,jdbcType=VARCHAR},
                #{item.nodeId,jdbcType=VARCHAR},
                #{item.appCode,jdbcType=VARCHAR},
                #{item.appName,jdbcType=VARCHAR},
                #{item.appSearchCode,jdbcType=VARCHAR},
                #{item.createdTime,jdbcType=TIMESTAMP},
                #{item.updateTime,jdbcType=TIMESTAMP},
              </trim>
           </foreach> 
   </insert>
   
    <select id="selectNodeByAppCodes" resultMap="logNodeAppResultMap">
        SELECT * FROM es_log_app AS ela INNER JOIN es_log_node AS eln
        ON ela.node_id = eln.id
        WHERE 
          ela.APP_CODE IN 
          <foreach collection="list" item = "item" open="(" separator="," close=")">
                #{item,jdbcType=VARCHAR}
          </foreach>
        GROUP BY eln.id
    </select>

</mapper>